{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "Medium.com",
        "description": "Medium???s unofficial API documentation using OpenAPI specification.\n\n# Official API\nOfficial API document can also be viewed for most up to date API spec at [https:\/\/github.com\/Medium\/medium-api-docs](https:\/\/github.com\/Medium\/medium-api-docs).\n\nDeveloper Blog - [Welcome to the Medium API](https:\/\/medium.com\/blog\/welcome-to-the-medium-api-3418f956552)\n",
        "termsOfService": "https:\/\/medium.com\/@feerst\/2b405a832a2f"
    },
    "servers": [
        "httpsapi.medium.com\/v1"
    ],
    "paths": {
        "\/me": {
            "get": {
                "summary": "User details",
                "description": "Returns details of the user who has granted permission to the application.",
                "operationId": "MeGet",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/publications\/{publicationId}\/contributors": {
            "get": {
                "summary": "Contributors of Publication",
                "description": "This endpoint returns a list of contributors for a given publication. In other words, a list of Medium users who are allowed to publish under a publication, as well as a description of their exact role in the publication (for now, either an editor or a writer).",
                "operationId": "PublicationsPublicationIdContributorsGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "publicationId",
                        "in": "path",
                        "description": "A unique identifier for the publication."
                    }
                ]
            }
        },
        "\/publications\/{publicationId}\/posts": {
            "post": {
                "summary": "Create Publication Post",
                "description": "creating a post and associating it with a publication on Medium. The request also shows this association, considering posts a collection of resources under a publication\n\nThere are additional rules around publishing that each request to this API must respect:\n  - If the authenticated user is an 'editor' for the publication, they can create posts with any publish status. Posts published as 'public' or 'unlisted' will appear in collection immediately, while posts created as 'draft' will remain in ",
                "operationId": "PublicationsPublicationIdPostsPost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "publicationId",
                        "in": "path",
                        "description": "A unique identifier for the publication."
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Creates a post for publication."
                    }
                ]
            }
        },
        "\/users\/{authorId}\/posts": {
            "post": {
                "summary": "Create User Post",
                "description": "Creates a post on the authenticated user???s profile.",
                "operationId": "UsersAuthorIdPostsPost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Creates a post for publication."
                    },
                    {
                        "name": "authorId",
                        "in": "path",
                        "description": "authorId is the user id of the authenticated user."
                    }
                ]
            }
        },
        "\/users\/{userId}\/publications": {
            "get": {
                "summary": "User's publications",
                "description": "Returns a full list of publications that the user is related to in some way. This includes all publications the user is subscribed to, writes to, or edits.",
                "operationId": "UsersUserIdPublicationsGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "A unique identifier for the user."
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Contibutor": {
                "type": "object",
                "properties": {
                    "publicationId": {
                        "description": "",
                        "type": "get"
                    },
                    "role": {
                        "description": "",
                        "type": "get"
                    },
                    "userId": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ContibutorResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Post": {
                "type": "object",
                "properties": {
                    "canonicalUrl": {
                        "description": "",
                        "type": "get"
                    },
                    "content": {
                        "description": "",
                        "type": "get"
                    },
                    "contentFormat": {
                        "description": "",
                        "type": "get"
                    },
                    "license": {
                        "description": "",
                        "type": "get"
                    },
                    "publishStatus": {
                        "description": "",
                        "type": "get"
                    },
                    "tags": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "PostDetails": {
                "type": "object",
                "properties": {
                    "authorId": {
                        "description": "",
                        "type": "get"
                    },
                    "canonicalUrl": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "license": {
                        "description": "",
                        "type": "get"
                    },
                    "licenseUrl": {
                        "description": "",
                        "type": "get"
                    },
                    "publishStatus": {
                        "description": "",
                        "type": "get"
                    },
                    "publishedAt": {
                        "description": "",
                        "type": "get"
                    },
                    "tags": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    },
                    "url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Publication": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "imageUrl": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "url": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "PublicationResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "imageUrl": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "url": {
                        "description": "",
                        "type": "get"
                    },
                    "username": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "UserResponse": {
                "type": "object"
            }
        }
    }
}